// Rearrange linked list in-place in java (gfg problem)

class GfG 
{
    public static Node rearrange(Node root)
    {
        Node slow = root;
        Node fast = root;
        while(fast!=null && fast.next!=null){
            slow = slow.next;
            fast = fast.next.next;
        }
        
        Node first = root;
        Node second = slow.next;
        slow.next = null;
        second = reverse(second);
        
        Node dummy=new Node(0);
        Node temp=dummy;
        while(first!=null || second!=null){
            if(first!=null){
                temp.next = first;
                temp = temp.next;
                first = first.next;
            }
            if(second!=null){
                temp.next = second;
                temp = temp.next;
                second = second.next;
            }
        }
        
        return dummy.next;
        
    }
    
    public static Node reverse(Node head){
        Node prev = null;
        Node cur = head;
        while(cur!=null){
            Node temp = cur.next;
            cur.next = prev;
            prev = cur;
            cur = temp;
        }
        return prev;
    }
}
